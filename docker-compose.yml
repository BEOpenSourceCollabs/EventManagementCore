version: "3.8"

services:
    
  event-mgmt-core:
    container_name: event-mgmt-core
    build: .
    depends_on:
      - db
    restart: unless-stopped
    env_file: .env
    environment:
      - DATABASE_HOST=event-mgmt-postgres
    develop:
      watch:
      - action: sync+restart
        path: .
        target: /app
        ignore:
          - bin/
          - api/
          - tmp/
          - coverage/
          - .vscode/
    networks:
      - event-mgmt-network
    ports: 
      - 8081:8081

  db:
    image: postgres
    container_name: event-mgmt-postgres
    restart: always
    ports:
      - 5432:5432
    env_file:
      - db.env
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - event-mgmt-network

  pgadmin:
    image: dpage/pgadmin4
    depends_on:
      - db
    container_name: event-mgmt-pgadmin
    restart: always
    ports:
      - 8888:80
    env_file:
      - db.env
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - event-mgmt-network
    configs:
      - source: servers.json
        target: /pgadmin4/servers.json

configs:
  servers.json:
    content: |
      {"Servers": {"1": {
        "Group": "Servers",
        "Name": "${DATABASE_NAME}",
        "Host": "event-mgmt-postgres",
        "Port": ${DATABASE_PORT},
        "MaintenanceDB": "event-mgmt-db",
        "Username": "${DATABASE_USER}",
        "SSLMode": "${DATABASE_SSL_MODE}"
      }}}

volumes:
  db_data:
  pgadmin_data:
    driver: local

networks:
  event-mgmt-network:
    driver: bridge